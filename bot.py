import telebot
import sqlite3
import time
import random

API_TOKEN = '7294993191:AAHKGun4DVdrlUyMUDmJTtKhk7Dn_UD52Uc'
bot = telebot.TeleBot(API_TOKEN)

# –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
try:
    conn = sqlite3.connect('users.db', check_same_thread=False)
except sqlite3.Error as e:
    print(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö: {e}")

# –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, –µ—Å–ª–∏ –æ–Ω–∞ –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –∏ –¥–æ–±–∞–≤–ª—è–µ–º —Å—Ç–æ–ª–±–µ—Ü bank, –µ—Å–ª–∏ –µ–≥–æ –Ω–µ—Ç
try:
    with conn:
        conn.execute('''
        CREATE TABLE IF NOT EXISTS users (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            telegram_id INTEGER UNIQUE,
            balance TEXT DEFAULT '5000',
            bank TEXT DEFAULT '0',
            clan_id TEXT DEFAULT NULL,
            transfer_limit TEXT DEFAULT '–±–µ–∑–ª–∏–º–∏—Ç –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É'
        )
        ''')
        conn.execute("ALTER TABLE users ADD COLUMN bank TEXT DEFAULT '0'")
except sqlite3.Error as e:
    print(f"–û—à–∏–±–∫–∞ —Å–æ–∑–¥–∞–Ω–∏—è —Ç–∞–±–ª–∏—Ü—ã –∏–ª–∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Å—Ç–æ–ª–±—Ü–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
def update_balance(user_id, new_balance):
    try:
        with conn:
            conn.execute('UPDATE users SET balance = ? WHERE id = ?', (new_balance, user_id))
    except sqlite3.Error as e:
        print(f"–û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞
def format_balance(balance):
    try:
        balance = float(balance)
        if balance >= 1e20:
            return f"{balance:.0e}"
        else:
            return f"{balance:.0f}"
    except ValueError:
        return balance

# –û–±–Ω–æ–≤–ª—è–µ–º –±–∞–ª–∞–Ω—Å –∏–≥—Ä–æ–∫–∞ —Å ID 1 –Ω–∞ 30,000,000 (–¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è)
update_balance(1, '30000000')

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
@bot.message_handler(commands=['start'])
def handle_start(message):
    telegram_id = message.from_user.id
    try:
        with conn:
            cursor = conn.execute('SELECT id FROM users WHERE telegram_id = ?', (telegram_id,))
            user = cursor.fetchone()

        if user is None:
            with conn:
                conn.execute('INSERT INTO users (telegram_id) VALUES (?)', (telegram_id,))
            bot.send_message(telegram_id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!\nGRAM - —ç—Ç–æ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–∞—è –≤–∞–ª—é—Ç–∞. –£ –Ω–∞—Å –º–æ–∂–Ω–æ –∏–≥—Ä–∞—Ç—å –≤ –∏–≥—Ä—ã.\n–í–∞–ª—é—Ç—É –º–æ–∂–Ω–æ –ø–µ—Ä–µ–¥–∞–≤–∞—Ç—å –¥—Ä—É–≥–∏–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.\n–ó–∞–ø—É—Å—Ç–∏–≤ –±–æ—Ç, –≤—ã –ø—Ä–∏–Ω–∏–º–∞–µ—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ —Å–æ–≥–ª–∞—à–µ–Ω–∏–µ –Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ –±–æ—Ç–æ–º.")
        else:
            bot.send_message(telegram_id, "–í—ã —É–∂–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω—ã.")
    except sqlite3.Error as e:
        bot.send_message(telegram_id, f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –ø—Ä–æ—Ñ–∏–ª—å
@bot.message_handler(func=lambda message: message.text.lower() == '–ø—Ä–æ—Ñ–∏–ª—å')
def handle_profile(message):
    telegram_id = message.from_user.id
    username = message.from_user.username
    try:
        with conn:
            cursor = conn.execute('SELECT id, balance, bank, clan_id, transfer_limit FROM users WHERE telegram_id = ?', (telegram_id,))
            user = cursor.fetchone()

        if user:
            bot_user_id, balance, bank, clan_id, transfer_limit = user
            formatted_balance = format_balance(balance)
            formatted_bank = format_balance(bank)
            profile_link = f"<a href='https://t.me/{username}'>{username}</a>"
            clan_display = clan_id if clan_id else '-'
            profile_message = f"{profile_link}, –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å:\nü™™ ID: {bot_user_id}\nüèÜ –°—Ç–∞—Ç—É—Å: –û–±—ã—á–Ω—ã–π\nüí∞ –ë–∞–ª–∞–Ω—Å: {formatted_balance} –≥—Ä–∞–º–º\nüè¶ –ë–∞–Ω–∫: {formatted_bank} –≥—Ä–∞–º–º\nüè∞ –ö–ª–∞–Ω: {clan_display}\nüí∏ –õ–∏–º–∏—Ç –Ω–∞ –ø–µ—Ä–µ–¥–∞—á—É: {transfer_limit}"
            bot.send_message(telegram_id, profile_message, parse_mode='HTML', disable_web_page_preview=True)
        else:
            bot.send_message(telegram_id, "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    except sqlite3.Error as e:
        bot.send_message(telegram_id, f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –±–∞–ª–∞–Ω—Å –∏–ª–∏ –±
@bot.message_handler(func=lambda message: message.text.lower() in ['–±–∞–ª–∞–Ω—Å', '–±'])
def handle_balance(message):
    telegram_id = message.from_user.id
    try:
        with conn:
            cursor = conn.execute('SELECT balance FROM users WHERE telegram_id = ?', (telegram_id,))
            user = cursor.fetchone()

        if user:
            balance = user[0]
            formatted_balance = format_balance(balance)
            bot.send_message(telegram_id, f"üí∞ –ë–∞–ª–∞–Ω—Å GRAM: {formatted_balance}")
        else:
            bot.send_message(telegram_id, "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    except sqlite3.Error as e:
        bot.send_message(telegram_id, f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∫–æ–º–∞–Ω–¥—ã
@bot.message_handler(func=lambda message: message.text.lower() == '–∫–æ–º–∞–Ω–¥—ã')
def handle_commands(message):
    commands_list = (
        "/start - –ù–∞—á–∞–ª–æ —Ä–∞–±–æ—Ç—ã —Å –±–æ—Ç–æ–º –∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è",
        "–ø—Ä–æ—Ñ–∏–ª—å - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à –ø—Ä–æ—Ñ–∏–ª—å",
        "–±–∞–ª–∞–Ω—Å –∏–ª–∏ –± - –ü–æ–∫–∞–∑–∞—Ç—å –≤–∞—à —Ç–µ–∫—É—â–∏–π –±–∞–ª–∞–Ω—Å",
        "–∫–æ–º–∞–Ω–¥—ã - –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥",
        "–∫–∞–∑–∏–Ω–æ (—Å—É–º–º–∞) - –°—ã–≥—Ä–∞—Ç—å –≤ –∫–∞–∑–∏–Ω–æ"
    )
    bot.send_message(message.chat.id, "–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:\n" + "\n".join(commands_list))

# –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã –∫–∞–∑–∏–Ω–æ
@bot.message_handler(func=lambda message: message.text.lower().startswith('–∫–∞–∑–∏–Ω–æ'))
def handle_casino(message):
    telegram_id = message.from_user.id
    try:
        amount = float(message.text.split()[1])
        with conn:
            cursor = conn.execute('SELECT balance FROM users WHERE telegram_id = ?', (telegram_id,))
            user = cursor.fetchone()

        if user:
            balance = float(user[0])
            if amount > balance:
                bot.send_message(telegram_id, "–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è —Å—Ç–∞–≤–∫–∏.")
            else:
                if random.choice([True, False]):
                    new_balance = balance + amount
                    bot.send_message(telegram_id, f"–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º! –í—ã –≤—ã–∏–≥—Ä–∞–ª–∏ {amount} –≥—Ä–∞–º–º. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {format_balance(new_balance)}")
                else:
                    new_balance = balance - amount
                    bot.send_message(telegram_id, f"–ö —Å–æ–∂–∞–ª–µ–Ω–∏—é, –≤—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏ {amount} –≥—Ä–∞–º–º. –í–∞—à –Ω–æ–≤—ã–π –±–∞–ª–∞–Ω—Å: {format_balance(new_balance)}")
                update_balance(user[0], str(new_balance))
        else:
            bot.send_message(telegram_id, "–ü—Ä–æ—Ñ–∏–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–æ–º–∞–Ω–¥—É /start –¥–ª—è —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.")
    except (IndexError, ValueError):
        bot.send_message(telegram_id, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, —É–∫–∞–∂–∏—Ç–µ —Å—É–º–º—É –¥–ª—è —Å—Ç–∞–≤–∫–∏. –ü—Ä–∏–º–µ—Ä: –∫–∞–∑–∏–Ω–æ 100")
    except sqlite3.Error as e:
        bot.send_message(telegram_id, f"–û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å –ø–æ–≤—Ç–æ—Ä–Ω—ã–º–∏ –ø–æ–ø—ã—Ç–∫–∞–º–∏ –≤ —Å–ª—É—á–∞–µ —Ç–∞–π–º–∞—É—Ç–∞
def start_bot():
    while True:
        try:
            bot.polling()
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}")
            time.sleep(15)  # –ñ–¥–µ–º 15 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–æ–π

start_bot()
